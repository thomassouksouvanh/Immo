<?phpnamespace App\Controller;use App\Entity\Optional;use App\Entity\Property;use App\Form\PropertyType;use App\Repository\PropertyRepository;use Doctrine\ORM\EntityManagerInterface;use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;use Symfony\Component\HttpFoundation\File\UploadedFile;use Symfony\Component\HttpFoundation\RedirectResponse;use Symfony\Component\HttpFoundation\Request;use Symfony\Component\HttpFoundation\Response;use Symfony\Component\Routing\Annotation\Route;class AdminController extends AbstractController{    /**     * @var PropertyRepository     */    private $repository;    /**     * @var EntityManagerInterface     */    private $entityManager;    public function __construct(PropertyRepository $repository,EntityManagerInterface $entityManager)    {        $this->repository=$repository;        $this->entityManager=$entityManager;    }    /**     * @Route("/admin/index", name="admin_index")     */    public function index()    {        $properties = $this->repository->findAll();        return $this->render('admin/index.html.twig', [            'properties' => $properties        ]);    }    /**     * @Route("/admin/edit/{id}", name="admin_edit", methods={"GET|POST"})     * @param Property $property     * @param Request $request     * @return Response     */    public function edit(Property $property, Request $request)    {        $form =$this->createForm(PropertyType::class,$property);        $form->handleRequest($request);        if($form->isSubmitted() && $form->isValid())        {            $this->entityManager->flush();            $this->addFlash('success','Votre annonce a été modifier avec succès');            return $this->redirectToRoute('admin_index');        }        return $this->render('admin/edit.html.twig',            [                'property' => $property,                'form' => $form->createView()            ]);    }    /**     * @Route("/admin/create", name="admin_create")     * @param Request $request     * @return Response     */    public function new(Request $request)    {        $property = new Property();        $form =$this->createForm(PropertyType::class,$property);        $form->handleRequest($request);        if($form->isSubmitted() && $form->isValid())        {            $this->entityManager->persist($property);            $this->entityManager->flush();            $this->addFlash('success','Votre annonce a été enregistrer avec succès');            return $this->redirectToRoute('admin_index');        }        return $this->render('admin/create.html.twig',            [                'property' => $property,                'form' => $form->createView()            ]);    }    /**     * @Route("/admin/{id}", name="admin_delete")     * @param Property $property     * @param Request $request     * @return RedirectResponse     */    public  function delete(Property $property, Request $request)    {        if($this->isCsrfTokenValid('delete'.$property->getId(),$request->get('_token')))        $this->entityManager->remove($property);        $this->entityManager->flush();        $this->addFlash('success','Votre annonce a été supprimer avec succès');        return $this->redirectToRoute('admin_index');    }}